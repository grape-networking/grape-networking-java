buildscript {
  ext {
      hiltVersion = "2.30.1-alpha"
      jUnitVersion = "5.7.0"
      espressoVersion = "3.4.0-alpha02"
      androidxVersion = "1.3.1-alpha02"
      roboelectricVersion = "4.5-alpha-1"
  }
  repositories {
      google()
      jcenter()
      mavenCentral()
      maven { url "https://oss.sonatype.org/content/repositories/snapshots" }
      maven { url "https://plugins.gradle.org/m2/" }
  }
  dependencies {
      classpath "com.android.tools.build:gradle:4.1.1"
      classpath "de.mannodermaus.gradle.plugins:android-junit5:1.6.2.0"
      classpath "com.vanniktech:gradle-android-junit-jacoco-plugin:0.16.0"
      classpath "com.google.dagger:hilt-android-gradle-plugin:${hiltVersion}"
  }
}

apply plugin: 'com.android.application'
apply plugin: 'de.mannodermaus.android-junit5'
apply plugin: 'com.vanniktech.android.junit.jacoco'
apply plugin: 'dagger.hilt.android.plugin'
apply plugin: 'maven-publish'

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.2"
    defaultConfig {
        applicationId "network.grape.app"
        minSdkVersion 18 // want 15, but uiautomator requires 18
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        testInstrumentationRunnerArgument "runnerBuilder", "de.mannodermaus.junit5.AndroidJUnit5Builder"
    }
    lintOptions {
        warningsAsErrors true
        showAll true
        explainIssues true
        xmlOutput file("build/reports/lint/report.xml")
        htmlOutput file("build/reports/lint/report.html")
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    packagingOptions {
        exclude "META-INF/LICENSE*"
    }
    buildTypes {
        debug {
            testCoverageEnabled true
        }
        release {
            testCoverageEnabled true
        }
    }
    testOptions {
        unitTests.returnDefaultValues = true
    }
}

dependencies {
    implementation project(path: ':lib')
    implementation 'com.google.android.material:material:1.2.1'
    implementation "com.google.dagger:hilt-android:${hiltVersion}"
    implementation "org.slf4j:slf4j-api:1.7.30"
    implementation ('com.papertrailapp:logback-syslog4j:1.0.0') {
        exclude group: 'ch.qos.logback'
    }
    implementation 'androidx.appcompat:appcompat:1.3.0-alpha02'
    runtimeOnly "com.github.tony19:logback-android:2.0.0"
    // note: this gives a lint warning, but if we take it out, it doesn't find annotations
    // https://stackoverflow.com/a/64726112
    //noinspection AnnotationProcessorOnCompilePath
    implementation 'org.projectlombok:lombok:1.18.16'
    annotationProcessor 'org.projectlombok:lombok:1.18.16'
    annotationProcessor "com.google.dagger:hilt-android-compiler:${hiltVersion}"

    testImplementation(testFixtures(project(path: ':lib')))
    testImplementation "org.junit.jupiter:junit-jupiter-api:${jUnitVersion}"
    testImplementation "org.junit.jupiter:junit-jupiter-params:${jUnitVersion}"
    testImplementation "com.google.dagger:hilt-android-testing:${hiltVersion}"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:${jUnitVersion}"
    testRuntimeOnly "uk.org.lidalia:slf4j-test:1.2.0"
    testImplementation "org.mockito:mockito-inline:3.6.28"
    testAnnotationProcessor "com.google.dagger:hilt-android-compiler:${hiltVersion}"

    androidTestImplementation "androidx.test:runner:1.3.0"
    androidTestImplementation "androidx.test.ext:junit:1.1.3-alpha02"
    androidTestImplementation "androidx.test.uiautomator:uiautomator-v18:2.2.0-alpha1"
    androidTestImplementation "androidx.test:core: ${androidxVersion}"
    androidTestImplementation "androidx.test.espresso:espresso-core:${espressoVersion}"
    androidTestImplementation "org.junit.jupiter:junit-jupiter-api:${jUnitVersion}"
    androidTestImplementation "com.google.dagger:hilt-android-testing:${hiltVersion}"
    androidTestImplementation 'com.android.support.test:rules:1.0.2'
    androidTestImplementation 'com.android.volley:volley:1.1.1'
    androidTestImplementation "de.mannodermaus.junit5:android-test-core:1.2.0"
    androidTestImplementation "org.mockito:mockito-inline:3.6.28"
    androidTestRuntimeOnly "de.mannodermaus.junit5:android-test-runner:1.2.0"
    androidTestAnnotationProcessor "com.google.dagger:hilt-android-compiler:${hiltVersion}"
}

junitJacoco {
    jacocoVersion = '0.8.5' // type String
    ignoreProjects = [] // type String array
    excludes = ['Hilt**', 'hilt**', '**Generated**', 'Dagger**'] // type String List
    includeNoLocationClasses = false // type boolean
    includeInstrumentationCoverageInMergedReport = true // type boolean
}

apply from: '../checkstyle.gradle'

// Because the components are created only during the afterEvaluate phase, you must
// configure your publications using the afterEvaluate() lifecycle method.
afterEvaluate {
    publishing {
        publications {
            debug(MavenPublication) {
                from components.debug_aab
                groupId = 'network.grape'
                artifactId = 'app'
                version = '1.0'

                //The publication doesn't know about our dependencies, so we have to manually add them to the pom
                pom.withXml {
                    // for dependencies and exclusions
                    def dependenciesNode = asNode().appendNode('dependencies')
                    configurations.implementation.allDependencies.each { ModuleDependency dp ->
                        def dependencyNode = dependenciesNode.appendNode('dependency')
                        dependencyNode.appendNode('groupId', dp.group)
                        dependencyNode.appendNode('artifactId', dp.name)
                        dependencyNode.appendNode('version', dp.version)

                        // for exclusions
                        if (dp.excludeRules.size() > 0) {
                            def exclusions = dependencyNode.appendNode('exclusions')
                            dp.excludeRules.each { ExcludeRule ex ->
                                def exclusion = exclusions.appendNode('exclusion')
                                exclusion.appendNode('groupId', ex.group)
                                exclusion.appendNode('artifactId', ex.module)
                            }
                        }
                    }
                }
            }
        }
    }
    task updatePom(type: Copy) {
        from "$buildDir/publications/debug/pom-default.xml"
        into "."
        rename ("pom-default.xml", "pom.xml")
        dependsOn(generatePomFileForDebugPublication)
    }
}

// disable the logback logging because it will fail unit tests where it can't access android storage
configurations.all { config ->
    if (config.name.startsWith('test') && config.name.endsWith('Compile')) {
        println "Replacing module in configuration " + config.name
        exclude group: "com.github.tony19", module: "logback-android"
    }

    // can't assemble AndroidTest with mockito: https://github.com/mockito/mockito/issues/2007
    if (config.name.contains('Android')) {
        println "Replacing module in configuration " + config.name
        exclude group: "org.mockito", module: "mockito-inline"
    }
}