buildscript {
  repositories {
      google()
      mavenCentral()
      maven { url "https://oss.sonatype.org/content/repositories/snapshots" }
      maven { url "https://plugins.gradle.org/m2/" }
  }
  dependencies {
      //classpath "com.android.tools.build:gradle:7.1.0-alpha08"
      classpath 'com.android.tools.build:gradle:7.0.2'
      classpath "de.mannodermaus.gradle.plugins:android-junit5:1.8.0.0"
      classpath "com.vanniktech:gradle-android-junit-jacoco-plugin:0.16.0"
      classpath "com.google.dagger:hilt-android-gradle-plugin:${hiltVersion}"
      classpath "com.hiya:jacoco-android:0.2"
      classpath "com.vanniktech:gradle-android-junit-jacoco-plugin:0.17.0-SNAPSHOT"
  }
}

apply plugin: 'com.android.application'
apply plugin: 'de.mannodermaus.android-junit5'
apply plugin: 'dagger.hilt.android.plugin'
apply plugin: 'jacoco'
apply plugin: 'com.hiya.jacoco-android'
apply plugin: 'maven-publish'

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.3"
    defaultConfig {
        applicationId "network.grape.app"
        minSdkVersion 18 // want 15, but uiautomator requires 18
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"
        multiDexEnabled true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        testInstrumentationRunnerArgument "runnerBuilder", "de.mannodermaus.junit5.AndroidJUnit5Builder"
    }
    lintOptions {
        abortOnError false
        warningsAsErrors false
        showAll true
        explainIssues true
        xmlOutput file("build/reports/lint/report.xml")
        htmlOutput file("build/reports/lint/report.html")
        disable "UnsafeExperimentalUsageError",
                "UnsafeExperimentalUsageWarning"
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
    packagingOptions {
        exclude "META-INF/LICENSE*"
    }
    buildTypes {
        debug {
            testCoverageEnabled true
        }
        release {
            testCoverageEnabled true
        }
    }
    testOptions {
        unitTests.returnDefaultValues = true
        unitTests.includeAndroidResources = true
    }
}

dependencies {
    implementation project(path: ':lib')
    implementation "androidx.multidex:multidex:$multidex_version"
    implementation 'com.google.android.material:material:1.4.0'
    implementation "com.google.dagger:hilt-android:${hiltVersion}"
    implementation "org.slf4j:slf4j-api:1.7.32"
    implementation ('com.papertrailapp:logback-syslog4j:1.0.0') {
        exclude group: 'ch.qos.logback'
    }
    runtimeOnly "com.github.tony19:logback-android:2.0.0"
    //noinspection AnnotationProcessorOnCompilePath
    implementation 'org.projectlombok:lombok:1.18.20'
    annotationProcessor 'org.projectlombok:lombok:1.18.20'
    annotationProcessor "com.google.dagger:hilt-android-compiler:${hiltVersion}"

    testImplementation "org.junit.jupiter:junit-jupiter-api:${jUnitVersion}"
    testImplementation "org.junit.jupiter:junit-jupiter-params:${jUnitVersion}"
    testImplementation "com.google.dagger:hilt-android-testing:${hiltVersion}"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:${jUnitVersion}"
    testRuntimeOnly "uk.org.lidalia:slf4j-test:1.2.0"
    testImplementation "org.mockito:mockito-inline:3.12.4"
    testImplementation "org.robolectric:robolectric:${roboelectricVersion}"
    testAnnotationProcessor "com.google.dagger:hilt-android-compiler:${hiltVersion}"

    androidTestImplementation "androidx.test.uiautomator:uiautomator-v18:2.2.0-alpha1"
    androidTestImplementation "androidx.test.espresso:espresso-core:${espressoVersion}"
    androidTestImplementation "org.junit.jupiter:junit-jupiter-api:${jUnitVersion}"
    androidTestImplementation "com.google.dagger:hilt-android-testing:${hiltVersion}"
    androidTestImplementation 'com.android.support.test:rules:1.0.2'
    androidTestImplementation 'com.android.volley:volley:1.2.1'
    androidTestImplementation "de.mannodermaus.junit5:android-test-core:${androidJUnit5Version}"
    androidTestImplementation "org.mockito:mockito-core:4.0.0"
    androidTestRuntimeOnly "de.mannodermaus.junit5:android-test-runner:${androidJUnit5Version}"
    androidTestAnnotationProcessor "com.google.dagger:hilt-android-compiler:${hiltVersion}"
}

apply from: '../checkstyle.gradle' //disabled because of some weird java 8 problem

// disable the logback logging because it will fail unit tests where it can't access android storage
configurations.all { config ->
    if (config.name.startsWith('test') && config.name.endsWith('Compile')) {
        println "Replacing module in configuration " + config.name
        exclude group: "com.github.tony19", module: "logback-android"
    }

    if (config.name.contains('Unit')) {
        println "Replacing module in configuration " + config.name
        exclude group: "uk.org.lidalia", module: "slf4j-test"
    }

    // can't assemble AndroidTest with mockito: https://github.com/mockito/mockito/issues/2007
    if (config.name.contains('Android')) {
        println "Replacing module in configuration " + config.name
        exclude group: "org.mockito", module: "mockito-inline"
    }
}

apply from: 'jacocoAndroid.gradle'

// prevents: com.android.tools.r8.a: MethodHandle.invoke and MethodHandle.invokeExact are only supported starting with Android O (--min-api 26)
// https://stackoverflow.com/questions/63612606/com-android-tools-r8-errors-a-methodhandle-invoke-and-methodhandle-invokeexact
// https://github.com/mockito/mockito/issues/2007
allprojects {
    configurations.all {
        resolutionStrategy.force 'org.objenesis:objenesis:3.2'
    }
}